@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditTaskCommandParser" as EditTaskCommandParser LOGIC_COLOR
participant "desc:EditTaskDescriptor" as EditTaskDescriptor LOGIC_COLOR
participant "cmd:EditTaskCommand" as EditTaskCommand LOGIC_COLOR
participant "res:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("editTask...")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("editTask...")
activate AddressBookParser

create EditTaskCommandParser
AddressBookParser -> EditTaskCommandParser : EditTaskCommandParser()
activate EditTaskCommandParser

EditTaskCommandParser --> AddressBookParser
deactivate EditTaskCommandParser

AddressBookParser -> EditTaskCommandParser : parse(args)
activate EditTaskCommandParser

'Constructor for EditTaskDescriptor
create EditTaskDescriptor
EditTaskCommandParser -> EditTaskDescriptor : EditTaskDescriptor()
activate EditTaskDescriptor
EditTaskDescriptor --> EditTaskCommandParser : desc
deactivate EditTaskDescriptor

opt has title
EditTaskCommandParser -> EditTaskDescriptor : setTitle(title)
activate EditTaskDescriptor
EditTaskDescriptor --> EditTaskCommandParser
deactivate EditTaskDescriptor
end opt

opt has note
EditTaskCommandParser -> EditTaskDescriptor : setNote(note)
activate EditTaskDescriptor
EditTaskDescriptor --> EditTaskCommandParser
deactivate EditTaskDescriptor
end opt

opt has tags
EditTaskCommandParser -> EditTaskDescriptor : setTags(tags)
activate EditTaskDescriptor
EditTaskDescriptor --> EditTaskCommandParser
deactivate EditTaskDescriptor
end opt

'Constructor for EditTaskCommand
create EditTaskCommand
EditTaskCommandParser -> EditTaskCommand : EditTaskCommand(index, desc)
activate EditTaskCommand
EditTaskCommand --> EditTaskCommandParser : cmd
deactivate EditTaskCommand

EditTaskCommandParser --> AddressBookParser : cmd
deactivate EditTaskCommandParser

'Hidden arrow to position the destroy marker below the end of the activation bar.
EditTaskCommandParser -[hidden]-> AddressBookParser
destroy EditTaskCommandParser

AddressBookParser --> LogicManager : cmd
deactivate AddressBookParser

LogicManager -> EditTaskCommand : execute()
activate EditTaskCommand

EditTaskCommand -> Model : getFilteredTaskList()
activate Model

Model --> EditTaskCommand : filteredTaskList
deactivate Model

'Create edited task
EditTaskCommand -> EditTaskCommand : createEditedTask(taskToEdit, editTaskDescriptor)
activate EditTaskCommand
EditTaskCommand --> EditTaskCommand : editedTask
deactivate EditTaskCommand

EditTaskCommand -> Model : setTask(taskToEdit, editedTask)
activate Model
Model --> EditTaskCommand
deactivate Model

EditTaskCommand -> Model : updateFilteredTaskList(SHOW_ALL_TASKS)
activate Model
Model --> EditTaskCommand
deactivate Model

create CommandResult
EditTaskCommand -> CommandResult : CommandResult(MESSAGE_EDIT_TASK_SUCCESS)
activate CommandResult

CommandResult --> EditTaskCommand : res
deactivate CommandResult

EditTaskCommand --> LogicManager : res
deactivate EditTaskCommand

'Hidden arrow to position the destroy marker below the end of the activation bar.
EditTaskCommand -[hidden]-> LogicManager
destroy EditTaskCommand

[<--LogicManager
deactivate LogicManager
@enduml
